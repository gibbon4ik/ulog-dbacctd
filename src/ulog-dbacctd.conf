# Accounting file for ulog-acctd(8)

# Listen to which multicast groups (1-32, see iptables(8))
multicast groups=1

# The receive buffer that is allocated by the kernel for recv calls on
# the Netlink socket. Use sysctl(8) to adjust "net/core/rmem_max" to
# allow for larger buffers than 64kBytes.
socket receive buffer = 65536


# The hash table is used to store the accounting data. Increase it if
# ulog-acctd consumes too much CPU time. Set it to a prime number.
# Round up to next power of 2
hash table size = 8192

# Initial hash value
hash init value=0

# The hash table is used to store the number assoaccounting for IP, for example customer account id. Increase it if
# ulog-dbacctd consumes too much CPU time. Set it to a prime number.
# Round up to next power of 2
iphash table size = 256

# Define files that ulog-dbacctd generates
debug file=/var/log/ulog-debug.log

# Define file for ulog-dbacctd pid
pid file=/var/run/ulog-dbacctd.pid

# Define lock file for create while pushing data into database
lock file=/var/lock/ulog-dbacctd.lck

# Define file for saving data whet connect to database server lost
backup file=/var/log/ulog-backup.sql

# What should be written to the debug log?
# Possible values:
#  config
#  state
#  syscall
#  misc
#  statistics
#  signal
#  error
#  annoying
#  error-packet

# debug = statistics, error
debug = config, misc, statistics, signal, error, error-packet, state

# Accounting format, specified with a format string with similar
# syntax to printf(3)
#  %x timestamp since (when the first packet of a chunk was recorded)
#  %h hostname
#  %t timestamp till (when the last packet of a ckunk was recorded)
#  %p protocol
#  %s source IP
#  %S source port
#  %d destination IP
#  %D destination port
#  %P packets
#  %b bytes
#  %i incoming interface
#  %o outgoing interface
#  %f prefix
#  %u local uid
#  %X formatted date string (since) as as defined "date format"
#  %Z formatted date string (till) as as defined "date format"
#  %m MAC if any
#  %A ipaddress hash for source address
#  %B ipaddress hash for destination address
#  %C ipaddress hash for source or destination address
#
#  \t tab
#  \n newline
#  \r carriage return
#  \f feed form
#  \e ???
#  \\ literal \
#  \" literal "
#  \% literal %
#  %% literal %

accounting format="INSERT INTO traf (timestamp,srcip,dstip,bytes) VALUES(%t,'%s','%d',%b)"

#accounting format="%h\t%t\t%p\t%s\t%S\t%d\t%D\t%P\t%b\t\"%i\"\t\"%o\"\t\"%f\"\n"

# Use this to generate CISCO "ip accounting output-packets"-compatible
# accounting data:
#
#  accounting format="%s %d %P %b\n"

# SQL query for get numbers accociated for IPs or networks
# network defined as x.x.x.x/y or x.x.x.x/y.y.y.y
iphash query=SELECT ip,login_id FROM traf_iplogins

# Format for date, as strftime format
#date format=%d/%m/%y %H:%M:%S

# Insert this for empty interface
empty interface="-"


# Insert this for empty prefix
empty prefix="-"

# Flush statistic to databse every N seconds
flush=300

# 
fdelay=0

#
#logger nice value=0

# Define databse connect settings
# support types postgres,mysql

database type=postgres
database host=192.168.1.1
database dbname=data
database user=user
database password=pass
#database port=3306
database transaction=on

# $Id: ulog-dbacctd.conf,v 1.8 2003/08/11 15:41:43 bengen Exp $
